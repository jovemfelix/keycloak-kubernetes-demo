apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"frontend:1.0.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"frontend\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  labels:
    app: frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: frontend
  name: frontend
  namespace: rhsso-openshift-demo
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: frontend
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: rhsso-config
        - configMapRef:
            name: service-config
        image: quay.io/rfelix/rhsso-ocp-demo-frontend:1.0.1
#        image: image-registry.openshift-image-registry.svc.cluster.local:5000/rhsso-openshift-demo/rhsso-ocp-demo-frontend:latest
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 80
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
